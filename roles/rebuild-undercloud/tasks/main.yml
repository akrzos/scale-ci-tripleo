---
- name: Get the instackenv content for this cloud
  uri:
    url: "{{ instackenv_json }}"
  register: uri_response

- name: Count the number of nodes in instackenv
  set_fact:
    instackenv_nodes: "{{ uri_response['json']['nodes']|length }}"

- name: Requesting {{ total_hosts }} from instackenv {{ instackenv_nodes }} nodes
  fail:
    msg: "The number of nodes requested {{ total_hosts }} is more hosts in instackenv file {{ instackenv_nodes }}."
  when: total_hosts|int > instackenv_nodes|int

- name: Check selected nic-config setup
  fail:
    msg: "Select a nic-config setup from {{overcloud_nic_config_map.keys()}}"
  when: external_network_setup not in overcloud_nic_config_map

- name: Get the cloud_title from instackenv url
  set_fact:
    # Example: http://quads.scalelab.redhat.com/cloud/cloud08_instackenv.json
    cloud_title: "{{ instackenv_json|regex_replace('.*/([a-zA-Z0-9]+)_instackenv.json', '\\1') }}"

- name: Set Machine to rebuild
  delegate_to: localhost
  uri:
    body: "{\"host\": {\"build\": \"1\"}}"
    body_format: json
    force_basic_auth: true
    method: PUT
    password: "{{ticket_number}}"
    url: "{{foreman_url}}/api/hosts/{{undercloud_hostname}}"
    user: "{{cloud_title}}"
    validate_certs: false
  when: rebuild_undercloud | bool

- name: Reboot undercloud
  shell: "sleep 5; reboot now"
  async: 1
  poll: 0
  ignore_errors: true
  when: rebuild_undercloud | bool

# Stop gap to prevent a machine that is slow to reboot from passing
- name: Wait for Machine Rebuilding
  local_action:
    module: wait_for
    host: "{{undercloud_hostname}}"
    port: 22
    delay: 2
    timeout: 300
    state: stopped
  register: wait_for_data
  when: rebuild_undercloud | bool

- name: Wait for Machine Rebuild to complete
  local_action:
    module: wait_for
    host: "{{inventory_hostname}}"
    port: 22
    delay: 600
    timeout: 2000
  when: rebuild_undercloud | bool

# Depending on hardware rebuild, we may not have the ssh key exchanged
- name: Setup root authorized key
  authorized_key:
    user: root
    key: "{{ lookup('file', lookup('env','PUBLIC_KEY')| default('~/.ssh/id_rsa.pub', true)) }}"
