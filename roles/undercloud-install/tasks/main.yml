---
# tasks file for undercloud-install

- name: Install Undercloud Block
  block:
    - name: Install undercloud
      shell: |
        set -o pipefail
        { time openstack undercloud install 2>&1 | tee -a {{log_dir}}/install-undercloud.log ; } 2>> {{log_dir}}/install-undercloud.log

    # (akrzos) Workaround for OSP11 Ocata where Keystone is deployed as a
    # singular process hosted in httpd.
    - name: OSP11/Ocata - Tune Keystone processes to 24
      become: true
      lineinfile:
        dest: "{{item}}"
        state: present
        regexp: '^([\t\s]*WSGIDaemonProcess.*)processes=[0-9]+ threads=[0-9]+(.*)$'
        line: '\1processes=24 threads=6\2'
        backup: true
        backrefs: true
      with_items:
        - /etc/httpd/conf.d/10-keystone_wsgi_admin.conf
        - /etc/httpd/conf.d/10-keystone_wsgi_main.conf
      when: version == '11'

    - name: OSP11/Ocata - Restart httpd hosting Keystone
      become: true
      service:
        name: httpd
        state: restarted
      when: version == '11'

    - name: Install ipa and overcloud images
      become: true
      yum: name={{item}}
      with_items:
        - rhosp-director-images
        - rhosp-director-images-ipa

    - name: Untar ipa and overcloud images
      command: "tar -xvf {{item}} -C /home/stack/images"
      with_items:
        - "/usr/share/rhosp-director-images/overcloud-full-latest-{{version}}.0.tar"
        - "/usr/share/rhosp-director-images/ironic-python-agent-latest-{{version}}.0.tar"

    - name: Add debugging root password to images
      shell: "cd /home/stack/images; virt-customize -a overcloud-full.qcow2 --root-password password:{{overcloud_image_password}}"
      environment:
        LIBGUESTFS_BACKEND: direct

    - name: Upload images
      shell: . /home/stack/stackrc; openstack overcloud image upload --image-path /home/stack/images/
  always:
    - name: Collect undercloud.conf
      become: true
      shell: |
        cp /home/stack/undercloud.conf {{log_dir}}/undercloud.conf

    - name: Collect Install Undercloud Artifacts
      synchronize:
        src: "{{log_dir}}"
        dest: "{{artifact_dir}}/alderaan-deploy_log"
        mode: pull

- name: Get neutron subnet uuid
  shell: |
    . /home/stack/stackrc
    neutron subnet-list | grep start | awk '{print $2}'
  register: neutron_subnet_uuid

- name: Setup DNS on Undercloud Neutron subnet
  shell: |
    . /home/stack/stackrc
    neutron subnet-update {{neutron_subnet_uuid.stdout}} --dns-nameserver {{dns_server}}

- name: Get instackenv.json
  get_url:
    url: "{{instackenv_json}}"
    dest: /home/stack/instackenv.json
    owner: stack
    group: stack

- name: Convert instackenv for no introspection
  shell: |
    set -o pipefail
    cat /home/stack/instackenv.json | jq  '{ nodes: [ .nodes[] | .cpu="4" | .memory="60000" | .disk="50" |  .  ]}' > /home/stack/intermediate.json
    python -m json.tool /home/stack/intermediate.json /home/stack/instackenv.json
    rm -f /home/stack/intermediate.json
  when: instackenv_no_introspection

- name: Import instackenv.json
  shell: |
    . /home/stack/stackrc
    openstack baremetal import --json /home/stack/instackenv.json

- name: Configure boot
  shell: |
    . /home/stack/stackrc
    openstack baremetal configure boot

- name: No Introspection node provide Block
  when: instackenv_no_introspection
  block:
    - name: Set Nodes to provide
      shell: |
        set -o pipefail
        . /home/stack/stackrc
        { time timeout {{node_provide_timeout}} openstack overcloud node provide --all-manageable 2>&1 | tee -a {{log_dir}}/overcloud-node-provide.log ; } 2>> {{log_dir}}/overcloud-node-provide.log
  always:
    - name: Collect instackenv.json
      shell: |
        cp /home/stack/instackenv.json {{log_dir}}/instackenv.json
      ignore_errors: true

    - name: Collect No Introspection node provide Artifacts
      synchronize:
        src: "{{log_dir}}"
        dest: "{{artifact_dir}}/alderaan-deploy_log"
        mode: pull

- name: Introspection Script Block
  when: instackenv_no_introspection == false
  block:
    - name: Template introspection script
      template:
        src: introspect.sh.j2
        dest: /home/stack/alderaan-deploy/introspect.sh
        mode: 0744

    - name: Run introspection with retry script
      shell: |
        set -o pipefail
        { time bash /home/stack/alderaan-deploy/introspect.sh 2>&1 | tee -a {{log_dir}}/introspection-script.log ; } 2>> {{log_dir}}/introspection-script.log
  always:
    - name: Dump baremetal node list/show data into artifact directory
      shell:  |
        set -o pipefail
        . /home/stack/stackrc
        cp /home/stack/instackenv.json {{log_dir}}/instackenv.json
        openstack baremetal node list 2>&1 | tee -a {{log_dir}}/post-introspection-baremetal-node-list.log
        openstack baremetal node list | grep None | awk '{print $2}' | xargs -I % openstack baremetal node show % 2>&1 | tee -a {{log_dir}}/post-introspection-baremetal-node-show.log

    - name: Collect Introspection Script Artifacts
      synchronize:
        src: "{{log_dir}}"
        dest: "{{artifact_dir}}/alderaan-deploy_log"
        mode: pull

- name: Introspection-data Block
  when: instackenv_no_introspection == false
  block:
    - name: Generate introspection-data
      shell: |
        . /home/stack/stackrc
        mkdir /home/stack/introspection-data
        for i in `openstack baremetal node list | grep 'None' | awk '{print $2}'`; do openstack baremetal introspection data save $i > /home/stack/introspection-data/$i; done
  always:
    - name: Copy introspection data
      become: true
      shell: |
        mkdir -p {{log_dir}}/introspection-data
        cp -r /home/stack/introspection-data/* {{log_dir}}/introspection-data

    - name: Collect Introspection-data Artifacts
      synchronize:
        src: "{{log_dir}}"
        dest: "{{artifact_dir}}/alderaan-deploy_log"
        mode: pull
